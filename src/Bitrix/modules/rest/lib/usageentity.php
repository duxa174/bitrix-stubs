<?php

namespace Bitrix\Rest;

/**
 * Class UsageEntityTable
 *
 * Fields:
 * <ul>
 * <li> ID int mandatory
 * <li> ENTITY_TYPE string(1) mandatory
 * <li> ENTITY_ID int mandatory
 * <li> ENTITY_CODE string(255) mandatory
 * <li> SUB_ENTITY_TYPE string(1) optional
 * <li> SUB_ENTITY_NAME string(255) optional
 * </ul>
 *
 * @package Bitrix\Rest
 **/
class UsageEntityTable extends \Bitrix\Main\Entity\DataManager
{
    const ENTITY_TYPE_APPLICATION = 'A';
    const ENTITY_TYPE_WEBHOOK = 'W';
    const SUB_ENTITY_TYPE_METHOD = 'M';
    const SUB_ENTITY_TYPE_EVENT = 'E';
    const SUB_ENTITY_TYPE_PLACEMENT = 'P';
    const SUB_ENTITY_TYPE_ROBOT = 'R';
    const SUB_ENTITY_TYPE_ACTIVITY = 'A';
    const SUB_ENTITY_TYPE_CONFIGURATION = 'C';
    const SUB_ENTITY_TYPE_SEND_MESSAGE = 'S';
    const SUB_ENTITY_TYPE_LANDING = 'L';
    protected static $info = array();
    /**
     * Returns DB table name for entity.
     *
     * @return string
     */
    public static function getTableName()
    {
    }
    /**
     * Returns entity map definition.
     *
     * @return array
     */
    public static function getMap()
    {
    }
    /**
     * @param string $entityType
     * @param string $entityId
     * @return array
     */
    protected static function getEntityInfo($entityType, $entityId)
    {
    }
    /**
     * Returns entity autogenerated ID.
     *
     * @param string $entityType
     * @param string $entityId
     * @param string $subEntityType
     * @param string $subEntityName
     * @return int|false
     * @throws SqlQueryException
     */
    public static function register($entityType, $entityId, $subEntityType, $subEntityName)
    {
    }
    /**
     * Returns validators for ENTITY_TYPE field.
     *
     * @return array
     */
    public static function validateEntityType()
    {
    }
    /**
     * Returns validators for ENTITY_CODE field.
     *
     * @return array
     */
    public static function validateEntityCode()
    {
    }
    /**
     * Returns validators for SUB_ENTITY_TYPE field.
     *
     * @return array
     */
    public static function validateSubEntityType()
    {
    }
    /**
     * Returns validators for SUB_ENTITY_NAME field.
     *
     * @return array
     */
    public static function validateSubEntityName()
    {
    }
}